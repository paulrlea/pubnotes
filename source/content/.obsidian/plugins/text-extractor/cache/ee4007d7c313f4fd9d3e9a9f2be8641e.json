{"path":"Notes/@Summer2024/Computing for Physicists/Homework 7/homework7.pdf","text":"hat In[94]:= deqn = - Laplacian[V[x, y, z], {x, y, z}] ⩵ 0; region = Ball[{0, 0, 0}]; boundary = DirichletConditionV[x, y, z] ⩵ z / Sqrt[(x ^ 2 + y ^ 2 + z ^ 2)], True; solution = NDSolveValuedeqn, boundary, V, x, y, z ∈ region SliceContourPlot3Dsolution[x, y, z], \"CenterPlanes\", {x, y, z} ∈ region Out[97]= InterpolatingFunction Domain: {{-1., 1.}, {-1., 1.}, {-1., 1.}} Output: scalar Data not saved. Save now  Out[98]= In[101]:= (* Function has no dependence on phi. setting phi → 0 for taking value: *) coords = CoordinateTransform\"Spherical\" → \"Cartesian\", {0.1, 0.3, 0} solution[0.029552020666133955, 0., 0.09553364891256061] Out[101]= {0.029552, 0., 0.0955336} Out[102]= 0.0959505 In[54]:= deqn2 = - LaplacianV[x, y], {x, y} ⩵ 0 ; region2 = Annulus[{0, 0}, {1, 2}]; boundary1 = DirichletConditionV[x, y] ⩵ 0, Sqrtx ^ 2 + y ^ 2 ⩵ 1 ; boundary2 = DirichletConditionV[x, y] ⩵ 1, Sqrtx ^ 2 + y ^ 2 ⩵ 2 ; solution = NDSolveValuedeqn2, boundary1, boundary2, V, {x, y} ∈ region2 ContourPlotsolution[x, y], x, y ∈ region2, PlotRange → All Out[58]= InterpolatingFunction Domain: {{-2., 2.}, {-2., 2.}} Output: scalar  Out[59]= -2 -1 0 1 2 -2 -1 0 1 2 2 homework7.nb In[9]:= v[x _] := Piecewise{x ^ 2, - 10 < x < 0}, x, 0 ≤ x < 10 {eval, evec} = NDEigensystem- (1 / 2) Laplacian[ψ[x], {x}] + v[x] * ψ[x] , ψ[x], {x, - 10, 10}, 3 Out[10]= {0.762032, 1.95571, 2.92049}, InterpolatingFunction Domain: {{-10., 10.}} Output: scalar [x], InterpolatingFunction Domain: {{-10., 10.}} Output: scalar [x], InterpolatingFunction Domain: {{-10., 10.}} Output: scalar [x] In[17]:= Plotevec, {x, - 10, 10}, PlotRange → Full Out[17]= -10 -5 5 10 -0.5 0.5 In[41]:= v[x _, y _] := x ^ 2 + y ^ 2 region3 = Disk[{0, 0}, 5] boundary3 = DirichletConditionv[x, y] ⩵ 0, Sqrt[x ^ 2 + y ^ 2] ⩵ 5 {eval, evec} = NDEigensystem- (1 / 2) Laplacian[ψ[x, y], {x, y}] + v[x, y] * ψ[x, y] , ψ[x, y], {x, y} ∈ region3, 3 ContourPlotevec〚1〛, {x, y} ∈ region3, PlotRange → All ContourPlotevec〚2〛, {x, y} ∈ region3, PlotRange → All ContourPlotevec〚3〛, {x, y} ∈ region3, PlotRange → All Out[42]= Disk[{0, 0}, 5] Out[43]= DirichletConditionx 2 + y 2 ⩵ 0, x 2 + y 2 ⩵ 5 homework7.nb 3 Out[44]= {1.41553, 2.83333, 2.83397}, InterpolatingFunction Domain: {{-5., 5.}, {-5., 5.}} Output: scalar [x, y], InterpolatingFunction Domain: {{-5., 5.}, {-5., 5.}} Output: scalar [x, y], InterpolatingFunction Domain: {{-5., 5.}, {-5., 5.}} Output: scalar [x, y] Out[45]= -4 -2 0 2 4 -4 -2 0 2 4 4 homework7.nb Out[46]= -4 -2 0 2 4 -4 -2 0 2 4 Out[47]= -4 -2 0 2 4 -4 -2 0 2 4 homework7.nb 5","libVersion":"0.5.0","langs":""}