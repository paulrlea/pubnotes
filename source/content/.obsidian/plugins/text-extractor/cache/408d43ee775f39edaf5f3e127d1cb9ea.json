{"path":"Notes/Physics/Computing for Physicists/In Class 4/CFP_lec4_2024(1).pdf","text":"Lecture 4: Data ◦Data files and types (munging data) ◦Least squares and fitting Data Tabbed or simply delimited data can be read(or written) easily with np.loadtxt (or np.savetxt) Multiple data sets from different types of experiments or simulations Metadata: data about your data. simulation ~ compiler flags or libraries, input parameters, dates, etc. experiment ~ background readings of other equipment, instrumental settings, who took data, etc. Lots of different formats for data: structured: .csv, excel (.xlsx), .sql unstructured (markup for metadata): .xml or .json (pseudo)file-system : HDF5, zip (with metadata in .xml or .json) ?Stata, Clipboard, Pickle, Feather, SAS, …? Pandas Library can read a large assortment of datafile types Structured vs. unstructured Structured: each entry has the same fields (csv, sql) id|code|name|area|area_land|area_water|population|population_growth|birth_rate|death_rate|migration_rate|created_a t|updated_at1|af|Afghanistan|652230|652230|0|32564342|2.32|38.57|13.89|1.51|2015-11-01 13:19:49.461734|2015-11-01 13:19:49.4617342|al|Albania|28748|27398|1350|3029278|0.3|12.92|6.58|3.3|2015-11-01 13:19:54.431082|2015-11-01 13:19:54.4310823|ag|Algeria|2381741|2381741|0|39542166|1.84|23.67|4.31|0.92|2015-11-01 13:19:59.961286|2015-11-01 13:19:59.961286 entry from SQL database, country demographics {'event_type':'started-mission', 'keen':{'created_at':'2015-06-12T23:09:03.966Z', 'id': '557b668fd2eaaa2e7c5e916b', 'timestamp':'2015-06-12T23:09:07.971Z'}, 'sequence':1} {'event_type':'started-screen', 'keen':{'created_at':'2015-06-12T23:09:03.979Z', 'id': '557b668f90e4bd26c10b6ed6', 'timestamp':'2015-06-12T23:09:07.987Z'}, 'mission':1, 'sequence':4, 'type':'code'} {'event_type':'started-screen', 'keen':{'created_at':'2015- 06-12T23:09:22.517Z', 'id':'557b66a246f9a7239038b1e0', 'timestamp':'2015-06- 12T23:09:24.246Z'}, 'mission':1, 'sequence':3, 'type':'code'}, .json (javascript object notation) file, events from visitors to a website .xml file (extensible markup language) Pandas Import data as a “DataFrame” ◦Collection of series (similar to ndarray, but not fixed length) ◦Can be created from dictionary of arrays, lists, or series ◦Gracefully handles missing or corrupt data ◦Many numpy operations also work on dataframes (slicing, whole set manipulation/operations, Boolean logic, etc.) Wrangling Subsets of data: Boolean arrays: a Boolean array as an argument to an ndarray (or df) selects elements which are true Ingredients of a data fitting problem  A set of data Usually, 𝑥𝑖are measured with sufficient certainty, while 𝑦𝑖are subject to some uncertainty (i.e., error bars).  A model function  A figure-of-merit to be optimized The function depends on a set of adjustableparameters {𝑎} For linear fitting, the function is simply 𝑓(𝑥;𝑎,𝑎 ) =𝑎+𝑎𝑥 Or in a more common form 𝑓𝑥 =𝑎+𝑏𝑥 Least squares: 𝑆= [𝑦−𝑓(𝑥)] 𝜒 = 𝑦−𝑓(𝑥) 𝜎 Chi-square: Least squares are special case of chi-square with all 𝜎equal. On the other hand, chi-square can be considered as weighted least squares. Measuring the acceleration of gravity, g, using free fall Why Least squares and chi-square? 2.01.81.61.41.21.0𝑥(ℎ) 0.410.370.340.290.240.20𝑦(𝑡 ) Why do the measured points, 𝒚𝒊, not fall on exactly a straight line? Because any experimental measurement has an error bar. 𝑥𝑓( )𝑦− exp − 2𝜎 1 𝜎 2𝜋 𝑃𝑦 = Probabilityof finding 𝑦in the vicinity of its actual (or expected) value with 𝝈being the standard deviation(or error bar).  The goal of fitting is to find the set of {𝑎} that maximizesthe probability for ALL measured points, i.e., ∏ 𝑃𝑦 . 𝑆 = [𝑦− 𝑓(𝑥)] 𝜒 = 𝑦− 𝑓(𝑥) 𝜎  This is equivalent to the minimizationof least squares or chi-square Linear fitting (or regression) 2.01.81.61.41.21.0𝑥(ℎ) 0.410.370.340.290.240.20𝑦(𝑡 ) 𝑦=𝑓𝑥 =𝑎𝑥+𝑏 𝑆= [𝑦−𝑓(𝑥)] 𝑆= [0.20 −𝑎∗ 1.0 +𝑏]2 +[0.24 −𝑎∗ 1.2 +𝑏]2 +[0.29 −𝑎∗ 1.4 +𝑏]2 +[0.34 −𝑎∗ 1.6 +𝑏]2 +[0.37 −𝑎∗ 1.8 +𝑏]2 +[0.41 −𝑎∗ 2.0 +𝑏]2 𝑆= 0.6023 − 5.848𝑎+ 14.2𝑎 − 3.7𝑏+18𝑎𝑏+ 6𝑏 𝜕𝑆 𝜕𝑎 = −5.848 + 28.4𝑎+18𝑏= 0 𝜕𝑆 𝜕𝑏 = −3.7 +18𝑎+12𝑏= 0 𝑎= 0.213 𝑏= −0.011 Linear fitting – General formulation 𝜒 (𝑎, 𝑏) = 𝑦− 𝑎𝑥− 𝑏 𝜎 = 𝑦 𝜎 − 2𝑥𝑦 𝜎 𝑎 − 2𝑦 𝜎 𝑏 + 𝑥 𝜎 𝑎 + 2𝑥 𝜎 𝑎𝑏 + 1 𝜎 𝑏 𝜕𝜒 𝜕𝑎 = − 2𝑥𝑦 𝜎 + 2𝑥 𝜎 𝑎 + 2𝑥 𝜎 𝑏 = 0 𝜕𝜒 𝜕𝑏 = − 2𝑦 𝜎 + 2𝑥 𝜎 𝑎 + 2 𝜎 𝑏 = 0 𝑥 𝜎 𝑎 + 𝑥 𝜎 𝑏 = 𝑥𝑦 𝜎 𝑥 𝜎 𝑎 + 1 𝜎 𝑏 = 𝑦 𝜎 𝐶 𝐶 𝐶 𝐶 𝐶 𝐶 𝐶𝑎 + 𝐶𝑏 = 𝐶 𝐶𝑎 + 𝐶𝑏 = 𝐶 𝑏 = 𝐶𝐶− 𝐶𝐶 𝐶𝐶− 𝐶 𝑎 = 𝐶𝐶− 𝐶𝐶 𝐶𝐶− 𝐶 Can we estimate the error bars in 𝒂 and 𝒃given the error bars of 𝒚𝒊(i.e, 𝝈𝒊)? Errors (or uncertainties) in aand b 𝑥 𝜎 𝑎 + 𝑥 𝜎 𝑏 = 𝑥𝑦 𝜎 𝑥 𝜎 𝑎 + 1 𝜎 𝑏 = 𝑦 𝜎 𝐶 𝐶 𝐶 𝐶 𝐶 𝐶 𝑏(𝑦) = 𝐶𝐶− 𝐶𝐶 𝐶𝐶− 𝐶 𝑎(𝑦) = 𝐶𝐶− 𝐶𝐶 𝐶𝐶− 𝐶 For a function with independent variables 𝑓(𝑥, 𝑥, … 𝑥), the variancein 𝑓, 𝜎 , is given by the variance of the variables, 𝜎 , through the error propagationformula: 𝜎 = 𝜕𝑓 𝜕𝑥 𝜎 variance is the square of standard deviation Note: the variables here are 𝑦, not 𝑥! 𝜎 = 𝜕𝑎 𝜕𝑦 𝜎 = 𝐶𝑥− 𝐶 𝐶𝐶− 𝐶 1 𝜎 𝜎 is the short form for 𝜎 𝜎 = 𝜕𝑏 𝜕𝑦 𝜎 = 𝐶− 𝐶𝑥 𝐶𝐶− 𝐶 1 𝜎 = 𝐶 𝐶𝐶− 𝐶 = 𝐶 𝐶𝐶− 𝐶 = 1 ∆ 𝐶𝑥 − 2𝐶𝑥𝐶+ 𝐶 𝜎 =𝐶𝐶− 2𝐶𝐶 + 𝐶𝐶 ∆ =𝐶∆ ∆=𝐶 ∆ = 1 ∆ 𝐶 − 2𝐶𝐶𝑥+ 𝐶 𝑥 𝜎 =𝐶𝐶 − 2𝐶𝐶 + 𝐶 𝐶 ∆ =𝐶∆ ∆ =𝐶 ∆ Summary of Linear Regression 𝑏 = 𝐶𝐶− 𝐶𝐶 𝐶𝐶− 𝐶 𝑎 = 𝐶𝐶− 𝐶𝐶 𝐶𝐶− 𝐶 Fitting function: 𝑥 𝜎 𝑎 + 𝑥 𝜎 𝑏 = 𝑥𝑦 𝜎 𝑥 𝜎 𝑎 + 1 𝜎 𝑏 = 𝑦 𝜎 𝐶 𝐶 𝐶 𝐶 𝐶 𝐶 𝜎 = 𝐶 𝐶𝐶− 𝐶 𝜎 = 𝐶 𝐶𝐶− 𝐶 𝜒 (𝑎, 𝑏) = 𝑦− 𝑎𝑥− 𝑏 𝜎 Solve for a and b by minimizing 𝜒: 𝜕𝜒 𝜕𝑎 = 0 and 𝜕𝜒 𝜕𝑏 = 0 Error bars on for a and b: Solution for a and b: (linear fit) Goodness of fit, 𝟐value , with General least-squares problem Linear regression: ◦ 𝑓𝑥 =𝑎+𝑎𝑥 (𝑓= 1,𝑓=𝑥) Higher order polynomial (still considered linear regression): ◦𝑓𝑥 =𝑎+𝑎𝑥+𝑎𝑥 +𝑎𝑥 + ⋯ (𝑓= 1,𝑓=𝑥,𝑓=𝑥 ,𝑓= 𝑥 , … ) Nonlinear functions: ◦𝑓𝑥 =𝑎+𝑎sin𝑥 +𝑎𝑒 (𝑓= 1,𝑓= sin (𝑥),𝑓=𝑒 , ) 𝜒 = 𝑦−𝑓(𝑥) 𝜎 𝑓𝑥 = 𝑎𝑋(𝑥) (note, fitting function is still only linear in the parameters, 𝑎,𝑎,𝑎, …) (𝑋are basis functions) Minimize 𝜒to find 𝑎,𝑎,𝑎, … will be a set of linear equations in a’s and nonlinear routines Non-linear routines may converge to “local” minima, not the true optimum","libVersion":"0.5.0","langs":""}