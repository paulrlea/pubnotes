{"path":"Notes/Physics/Computing for Physicists/In Class 13/inclass14.pdf","text":"In[]:= deqn = LaplacianV[x, y], {x, y} ⩵ 0 rectangle = Rectangle[{0, 0}, {10, 10}] boundary = DirichletCondition V[x, y] ⩵ Piecewise0, x ⩵ 10 && 0 < y < 10, 0, x ⩵ 0 && 0 < y < 10, 10, True solution = DSolveValuedeqn, boundary, V, {x, y} ∈ rectangle Out[]= V (0,2)[x, y] + V (2,0)[x, y] ⩵ 0 Out[]= Rectangle[{0, 0}, {10, 10}] Out[]= DirichletConditionV[x, y] ⩵ 0 (x ⩵ 10 && 0 < y < 10) || (x ⩵ 0 && 0 < y < 10) 10 True , True Out[]= Function{x, y},  K[1]=1 ∞ - 20 - 1 + (- 1)K[1] Cschπ K[1] Sin 1 10 π x K[1] Sinh 1 10 π (10 - y) K[1] π K[1] - 20 - 1 + (- 1)K[1] Cschπ K[1] Sin 1 10 π x K[1] Sinh 1 10 π y K[1] π K[1]  In[]:= first200 = solution /. ∞ → 200 // Activate Out[]= Function{x, y},  K[1]=1 200 - 20 - 1 + (- 1)K[1] Cschπ K[1] Sin 1 10 π x K[1] Sinh 1 10 π (10 - y) K[1] π K[1] - 20 - 1 + (- 1)K[1] Cschπ K[1] Sin 1 10 π x K[1] Sinh 1 10 π y K[1] π K[1]  In[]:= ContourPlotfirst200[x, y], x, y ∈ rectangle Out[]= 0 2 4 6 8 10 0 2 4 6 8 10 In[]:= deqn2 = LaplacianV[x, y], {x, y} ⩵ - 4 π * x Out[]= V (0,2)[x, y] + V (2,0)[x, y] ⩵ - 4 π x In[]:= solution2 = NDSolveValuedeqn2, boundary, V, {x, y} ∈ rectangle Out[]= InterpolatingFunction Domain: {{0., 10.}, {0., 10.}} Output: scalar  In[]:= ContourPlotsolution2[x, y], x, y ∈ rectangle Out[]= 0 2 4 6 8 10 0 2 4 6 8 10 2 inclass14.nb","libVersion":"0.5.0","langs":""}