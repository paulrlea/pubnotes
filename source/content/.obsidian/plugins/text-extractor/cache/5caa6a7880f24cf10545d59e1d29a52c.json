{"path":"Notes/@Summer2024/ExPhys/Analog Computing/Lea_Paul_Section1_AnalogComputing/Lea_Paul_Section1_AnalogComputing.pdf","text":"A n a lo g C o mp utin g La b Rep o rt Ob jective: Solve Dif ferential Equations with analog circuits using Op-Amp based integrators, dif ferentiators, adders and inverters. Eq uip men t Breadboard Oscilloscope Jumper Cables Resistor Assortments Capacitor Assortments Op-Amps (TLE2071CP) Digital Multi-meter 9v Battery and Harness USB Flash Drive 2 Function Generators Sectio n 1 Ob jective Familiarize ourselves with components of the analog computer , including inverters, integrators, differentiators and adders. ### Equipment: Same as above Sectio n 1 .1 : In vertin g A mp lifier Ob jective: The objective of this portion of the lab is to use an Operational amplifier , or Op-Amp integrated circuit to create an inverting amplifier and test if the theoretically calculated amplification values are in line with the experimentally measured and verified values. Eq uip men t: 4x Resistors 1x Op-Amp Breadboard 9v battery and power harness Oscilliscope Digital Multimeter Jumpers Pro cedure: Begin by selecting 4 appropriate resistors. T o experience the ef fects of the op-amp without overloading the power supply we will need to use a voltage divider that has approximately the inverse of the gain of the inverting Op-Amp. The calculated resistor values will be below in the data subsection, as well as the experimentally measured values. After acquiring these resistors, firstly construct a voltage divider , as shown in figure 1 below . Figure 1 After constructing the voltage divider , we can construct the inverting op-amp as per figure 2 below , and connect the from the voltage divider to the point on the inverting Op-Amp.Vout Vin Figure 2 After building the circuit testing the circuit can be done with both a static DC voltage applied through the voltage divider as well as a waveform applied with a function generator . Ideally , 4 tests would be performed with different resistor values, but in our case we were unable to perform these many tests. After these two tests are run and voltage measurements before and after both the voltage divider and op-amp circuit are gathered, we now are able to determine the experimental gain and compare to the theoretical gain. D a ta Resistance values for V oltage divider Resistance (kilo-ohms) 10 1.196 Real 0.6012 Resistance V alues for Inverting op-amp Resistance (kilo-ohms) 1.209 4.72 Potential in volts for input and output from circuit Potential (V olts) V_in 9.45 V_out -2.094 R1 ±0.9% R2 ±0.9% R2 ±0.9% Rin ±0.9% Rf ±0.9% ±0.5% ±0.5% Screenshot of oscilliscope scope showing total combined gain A n a ly sis Voltage Divider Calculations: We have a virtual ground point on the op-amp, so we need to consider to be in parallel with on the op-amp circuit when calculating the voltage divider drop. Voltage divider attenuation calculations: Where A is attenuation of the voltage divider . Op-Amp Gain Calculations: Vout = R2 R1 + R2 R2 Rin A = 0.056657117 ΔA = √( ΔR1) 2 + ( ΔR2) 2 = √((−(R2/(R1 + R2) 2)) ⋅ ΔR1)2 + ((R1/(R1 + R2) 2) ⋅ ΔR2)2 = 0.0006802704 = 6.802704 × 10 −4 = 7 × 10 −4 ∂A ∂R1 ∂A ∂R2 A = (5.67 ± 0.07) × 10 −2 Op-Amp Resistor V alues Gain Calculation Combining the attenuation and gain we should have a combined gain of: Total gain is Experimentally measured gain: The experimentally measured total gain is The experimentally measured gain and theoretically calculated gain are within 0.001, less then the uncertainty of our measuring equipment. This is evidence that confirms that our circuit performs as expected. Sectio n 1 .2 : In tegra tin g A mp lifier Ob jective: The objective of this portion of the lab is to use an Operational amplifier , or Op-Amp integrated circuit to create an integrating amplifier and test if the theorized values and waveforms are in line with the Op-Amp gain = − Rf Rin g = −3.9040529363 Δg = √( ΔRin) 2 + ( ΔRf ) 2 = √((Rf /Rin2) ⋅ ΔRin)2 + ((−(1/Rin)) ⋅ ΔRf )2 = 0.0496904815 = 4.96904815 × 10 −2 = 5 × 10 −2 ∂g ∂Rin ∂g ∂Rf g = (−3.9 ± 0.05) × 10 0 t = −0.22113 Δt = √( Δg) 2 + ( Δa) 2 = √((a) ⋅ Δg) 2 + ((g) ⋅ Δa) 2 = 0.0039357496 = 3.9357496 × 10 −3 = 4 × 10 −3 ∂t ∂g ∂t ∂a t = (−2.21 ± 0.04) × 10 −1 −0.221 ± 0.004 ge = −0.2215873016[ Δge = √( ΔVin) 2 + ( ΔVout) 2 = √((−(Vout/Vin2)) ⋅ ΔVin)2 + ((1/Vin) ⋅ ΔVout) 2 = 0.0015668588 = 1.5668588 × 10 −3 = 2 × 10 −3 ∂ge ∂Vin ∂ge ∂Vout ge = (−2.22 ± 0.02) × 10 −1 −0.222 ± 0.002 experimentally measured and verified values and waveforms. Eq uip men t: 1x Resistor 1x Capacitor 1x Op-Amp Breadboard 9v battery and power harness Oscilloscope Digital Multimeter Jumpers #### Procedure: As before, we first select appropriate values for the capacitor and multimeter . The lab reference material suggests nominal values of 10 for the resistor and 0.01 for the capacitor , which is what we used. The actual values and error propagation calculations are below in the data section. After selecting appropriate components, it is now appropriate to construct the circuit on the breadboard according to figure 3 below . Figure 3 After the circuit is constructed, we can use the function generator to test the integrating capacities using 2 different waveforms: Square wave 1V at 1kHz Triangular wave 1V at 1kHz Record data on oscilloscope, using channel one to record raw input from the function generator , and channel 2 to record the waveforms after they've been integrated. Compare this to the theoretically derived values and explain any discrepancies in the results. To find the theoretically derived values for we can use the following formula: Where is an initial condition, which we can ignore because our circuit continuously integrates. D a ta : kΩ μf ± ± Vout Vout = V0(0) − ∫ Vindt 1 RC V0(0) Figure Showing the integration of a square wave Figure showing the integration of a triangle wave Components R 10 C 0.097 Values of the circuit components A n a ly sis The continuous integration of the waveforms is in line with the theoretical model of , with some slight variation at the extrema, likely due to the Op-Amp receiving interference or reaching its maximum output. Sectio n 1 .3 D ifferen tia tin g Op -A mp Ob jective: The objective of this portion of the lab is to convert our integrating op-amp circuit into a dif ferentiating op- amp circuit. Eq uip men t: 1x Resistor 1x Capacitor 1x Op-Amp Breadboard 9v battery and power harness Oscilloscope Digital Multimeter Jumpers differentiating circuit #### Procedure: We will continue to use the same resistors and capacitors from the integrating amplifier for ease of construction, to change the integrating circuit to a dif ferentiating circuit it is a simple matter of swapping the location of the capacitor and resistor . The diagram for this can be seen below in figure 4 Figure 4 kΩ ± 0.9% μF ± 1.9% Vout = V0(0) − ∫ Vindt 1 RC After this circuit is complete, we will proceed to due the same tests performed upon the integrating amplifier to see if the dif ferentiating amplifier circuit matches its theoretically derived values. To find the theoretically derived values for this portion of the lab we use the following equation: Where, as before, is the initial condition term that we can safely ignore for our continuously differentiating case. After computing the theoretical values, we can test the circuit for the three cases as in the integrator section, a square and triangle wave. D a ta : Figure showing the dif ferentiation of a triangle wave over time. Note the similarities to the integrating section Vout(t) = V0(0) − RC dVin dt V0(0) Figure showing the dif ferentiation of a square wave. Components R 10 C 0.097 Values of the circuit components A n a ly sis: The differentiation of the waveforms follows the given theoretical model, . We can also logically think about the derivative of a function like a square wave, and what pattern it would follow , and the circuit produces an inverted derivative. While the derivative of a square wave at the leading and falling edges should be , that is obviously not physically possible, and this is represented by the op-amp maxing out its voltage supply at the leading and falling edges. Sectio n 1 .4 Summin g A mp lifier Ob jective: The objective of this portion of the lab is to convert our inverting op-amp circuit into a summing op-amp circuit. Eq uip men t: 1x Resistor 1x Capacitor kΩ ± 0.9% μF ± 1.9% Vout(t) = V0(0) − RC dVin dt ±∞ 1x Op-Amp Breadboard 9v battery and power harness Oscilloscope Digital Multimeter Jumpers inverting circuit #### Procedure: We can convert the inverting circuit into a summing circuit by adding a secondary resistor to the input leg of the op-amp. Choose appropriate resistors, between 1-5k , to find appropriate values of amplification. Keep in mind that any dif ference in resistors will result in a dif ferent weighting for each added component. Follow figure 5 below for more detailed instructions. Figure 5 After constructing the adder , we need to test it. W e can test this circuit using 2 waveforms, finally utilizing both function generators. The first function generator will be set to a square wave of about 500 Hz, and the second will be a higher frequency sine wave, at about 10 kHz. W e can observe the qualitative ef fects of this on the oscilloscope to confirm our adder is working correctly . D a ta Components R_f 3.931 R_1 1.782 R_2 1.782 Values of the components used in the adder circuit. Ω kΩ ± 0.9% kΩ ± 0.9% kΩ ± 0.9% The figure above shows the result of adding a high frequency sine wave and a lower frequency square wave. This figure is a more magnefied equivalant of the previous image, showing the rising edge behavior more clearly . A n a ly sis The circuit provides a clear and intuitive model for layering waveforms on top of eachother . The square and sine wave example provides a very easy to understand interpretation of the action of the adding circuit, layering the sine waves and the square waves together while preserving both frequencies and waveforms. Sectio n 2 : So lvin g the simp le ha rmo n ic o scilla to r Ob jective: Use the components constructed in section 1 to solve the simple harmonic oscillator's dif ferential equation continuously . Eq uip men t: Breadboard Oscilloscope Jumper Cables Resistor Assortments Capacitor Assortments Op-Amps (TLE2071CP) Digital Multi-meter 9v Battery and Harness USB Flash Drive Function Generator Pro cedure: The first step to building the analog computer and solving these dif ferential equations is to design the aforementioned analog computer . This can be done by analytically thinking about the task at hand, and breaking it down into components that can be built. The task at hand can be accomplished with 2 integrating circuits and an adder . It can be helpful to think of individual signals between components as parts of the differential equation, , and . The design that we settled on is pictured below (figure 6) as a block form, and in figure 7 as a circuit form. x ˙x ¨x Figure 6 Figure 7 Before we construct this circuit we have to consider what values of resistance and capacitance we should use to ensure the broadest possible range of integration. The literature for this lab suggests values of 0.01 f and 1 k , which is what we used. It is also worth noting that due to the inverting nature of the op-amps, we will get an inverted answer . This will be proven in the data and analysis section. After constructing this circuit, we have to provide a driving force. Connecting a function generator to the input leg of the analog adder will yield the required forcing and allow us to observe the harmonic oscillations. Finally it is time to gather data, beginning by providing a low-frequency square pulse, we can use the oscilloscope to view and capture the resulting oscillatory action. It is also suggested to change values of the resistance on the adder such that continual, non-dampened oscillations can be observed. W e made sure to capture data on oscillation amplitude and frequency using the cursor function on the oscilloscope. D a ta μ Ω Diagram with numbered components. Resistors R_1 0.994 R_2 0.995 kΩ ± 0.9% Ω R_3 0.986 R_4 0.987 R_5 0.986 Capacitors C_1 10 nF C_2 11 nF The above image shows the oscillations directly after the focing \"motion\" is applied kΩ ± 0.9% kΩ ± 0.9% kΩ ± 0.9% kΩ ± 0.9% ±1.9% ±1.9% The above image demonstrates the conditions under which the system oscillates by itself by replacing R_2 with a resistor measured at 218.4 ohms A n a ly sis To find the natural frequency and damping of oscillations, we will fit a sine curve to the data with orthogonal distance regression. W e are going to use the stable oscillation condition with R_2 ±0.9%In [51]: import numpy as np import pandas as pd import matplotlib.pyplot as plt from scipy.optimize import curve_fit , leastsq from scipy.odr import Model , RealData , ODR # Define the decaying sine function def sine ( params , t ): A , omega , phi , C = params return A * np . sin ( omega * t + phi ) + C # Read CSV file def read_csv ( filename ): df = pd . read_csv ( filename ) t = df [ 't' ] . values V = df [ 'V' ] . values return t , V # Load data filename = 'data.csv' t , V = read_csv ( filename ) # Initial guess for parameters A_guess = 15 omega_guess = 215000 phi_guess = 0.3 C_guess = 1 initial_guess = [ A_guess , omega_guess , phi_guess , C_guess ] # Define the ODR model model = Model ( sine ) data = RealData ( t , V ) odr = ODR ( data , model , beta0 = initial_guess ) # Run the regression odr_result = odr . run () # Extract the fitted parameters params_fit = odr_result . beta # Generate fitted curve V_fit = sine ( params_fit , t ) # Plot the data and the fitted curve plt . figure ( figsize = ( 10 , 6 )) plt . plot ( t , V , label = 'Data' ) plt . plot ( t , V_fit , 'r-' , label = 'Fitted Curve' ) plt . xlabel ( 'Time' ) plt . ylabel ( 'Voltage' ) plt . title ( 'Sine Curve Fitting' ) plt . legend () plt . grid ( True ) plt . show () # Print the fitted parameters print ( \"Fitted Parameters:\" ) print ( \"A:\" , params_fit [ 0 ]) print ( \"omega:\" , params_fit [ 1 ]) print ( \"phi:\" , params_fit [ 2 ]) print ( \"C:\" , params_fit [ 3 ]) Fitted Parameters: A: -0.7963437124475999 omega: 216027.28932029623 phi: -22.07888097138799 C: 0.0307785571238096 Following the method described in the appendix of the Analog Computer Theory , we have the following relations: and in the context of the analog computer and Therefore We can factor out beta and alpha And we know that is equal to the following: Or using our experimentally measured values: To find the final proportionality constant, the gain of the summing circuit also has to be accounted for . We can use the following to find this gain: Vout = − ∫ Vindt 1 RC ˙x = α ∫ ¨xdt x = β ∫ ˙xdt x = β ∫ α ∫ ¨xdt dt x = βα ∬ ¨x dt βα − (− ) 1 R1C1 1 R2C2 αβ = 9341427493.4278 Δab = √( ΔR) 2 + ( ΔC) 2 + ( ΔR1) 2 + ( ΔC1) 2 =           ⎷ ((−(C1/(R ∗ C ∗ R1 ∗ C1) 2 ∗ R1 ∗ C)) ⋅ ΔR)2 + ((−(C1/(R ∗ C ∗ R1 ∗ C1) 2 ∗ R1 ∗ R)) ⋅ ΔC)2 + ((−(C1/(R ∗ C ∗ R1 ∗ C1) 2 ∗ R ∗ C)) ⋅ ΔR1)2 + ((−(R/(R ∗ C ∗ R1 ∗ C1) 2 ∗ C ∗ R1)) ⋅ ΔC1)2 = 277740606.63077885 = 2.7774060663 × 10 8 = 3 × 10 8 ∂ab ∂R ∂ab ∂C ∂ab ∂R1 ∂ab ∂C1 ab = (9.3 ± 0.3) × 10 9 And for our summing amplifier Finally , we get our total proportionality constant: Applied to the harmonic oscillator dif ferential equation and therefore the frequency is related in the following manner: And with this, we can see the frequency obtained in the sinusoidal regression in the python script is within the propagated uncertainty values. Sectio n 3 : D a mp in g the ha rmo n ic o scilla to r Ob jective: Using the circuit from section 2 our goal is to introduce a damping term using an inverting op-amp circuit tied into our existing circuit. − Rf Rin R = −4.5146520147 ΔR = √( ΔRf ) 2 + ( ΔRi) 2 = √((−(1/Ri)) ⋅ ΔRf )2 + ((Rf /R2 i ) ⋅ ΔRi)2 = 0.057462139 = 5.7462139 × 10 −2 = 6 × 10 −2 ∂R ∂Rf ∂R ∂Ri R = (−4.51 ± 0.06) αβ ⋅ R = p = −41943000000 Δp = √( ΔR) 2 + ( Δab) 2 = √((ab) ⋅ ΔR) 2 + ((R) ⋅ Δab) 2 = 1463548085.9882944 = 1.463548086 × 10 9 = 1 × 10 9 ∂p ∂R ∂p ∂ab p = (−4.2 ± 0.1) × 10 10 ¨x = − x k m − = (−4.2 ± 0.1) × 10 10k m ω = √ = 204939.015319 ± 31622.7766017 k m γ m Eq uip men t: Everything from section 2, plus another op-amp chip, resistors and necessary jumper cables. Pro cedure: Begin by designing the appropriate modifications to include the damping term by connecting in to the \" \" signal in the analog computer and adding it to the term using the existing adder circuit. Using three more resistors, we can adjust the value of damping to something that will be easy to visualize on the oscilloscope. The modifications are outlined in figure 8 in purple. ˙x ¨x Figure 8 After making the appropriate modifications to the circuit, we can proceed to collect our data. It is important to first take a screenshot of the oscilloscope with the damper portion deactivated to account for any changes in the natural damping of the circuit. Compare this reading to the reading obtained after the damper is connected. D a ta The resistors in table below correspond to the resistors in the purple part of the diagram in figure 8. | | Resistors | |-----|------------------------------| | R_7 | 0.980 | | R_8 | 0.991 | | R_9 | 1.789 | With Resistor 9 removed from the circuit and the function generator set to a 34.4hz square wave: With Resistor 9 reinstalled in the circuit and the function generator set to the same 34.4hz square wave: kΩ ± 0.9% kΩ ± 0.9% kΩ ± 0.9% A n a ly sisIn [209… def exp_decay_sine ( beta , t ): A , lambda_ , omega , phi , c = beta return A * np . exp ( - lambda_ * t ) * np . sin ( omega * t + phi ) + c def fit_exp_decay_sine_odr ( t_data , y_data ): # Initial guess initial_guess = [ 1 , 1000 , 100500 , 0.5 , 0 ] model = Model ( exp_decay_sine ) data = RealData ( t_data , y_data ) odr = ODR ( data , model , beta0 = initial_guess ) output = odr . run () params = output . beta y_fit = exp_decay_sine ( params , t_data ) return params , y_fit data = pd . read_csv ( 'data2.csv' ) t_data = data . iloc [:, 0 ] . values y_data = data . iloc [:, 1 ] . values #Trimming data so it starst at 0 t_data = t_data - 0.0146 params , y_fit = fit_exp_decay_sine_odr ( t_data , y_data ) # Plot the results plt . figure ( figsize = ( 10 , 6 )) plt . plot ( t_data , y_data , label = 'Data' ) plt . plot ( t_data , y_fit , 'r-' , label = 'Fit' ) plt . xlabel ( 'Time' ) plt . ylabel ( 'Voltage' ) plt . legend () plt . title ( 'Exponential Decay Sine Fit' ) Fitted parameters: A=2.004, lambda=1090.942, omega=100664.100, phi=2.210 We want to find the theoretical damping coef ficient . This is going to be equivalent to the coef ficient of the inverting amplifier combined with the gain applied to it from the summing amplifier multiplied by alpha from the previous section. plt . show () print ( f \"Fitted parameters: A= { params [ 0 ] : .3f } , lambda= { params [ 1 ] : .3f } , omega= { params [ 2 ] : . γ α = ,  Inverter gain = − ,  Summer gain  = − 1 R3C1 R8 R9 R5 R7 = − γ m R8R5 R3C1R7R9 Divided by two to yield the term we need This yields our theoretical damping constant introduced from the addition of the inverting amplifier . The general form for the oscillator with damping: Using exponentially decaying sinusoidal regression, we were able to find the parameters that matched the naturally damped case above. Fitted parameters: A=2.004, lambda=1090.942, omega=100664.100, phi=2.210 Plugging these in: Now , with the damping circuit constant of we can compare and see if this yields the expected result. γ/2m = −28262.2831133571 Δγ/2m =         ⎷ ( ΔR9) 2 + ( ΔR8) 2 + ( ΔR7) 2 + ( + ( ΔR5) 2 + ( ΔR3) 2 =                  ⎷ ((R8/(R3 ∗ C1 ∗ R7 ∗ R9) 2/2 ∗ R5 ∗ R3 ∗ C1 ∗ R7) ⋅ ΔR9)2 + ((R5 ∗ −1/2/(R3 ∗ C1 ∗ R7 ∗ R9) 2 ∗ R3 ∗ C1 ∗ R7 ∗ R9) ⋅ ΔR8) + ((R8/(R3 ∗ C1 ∗ R7 ∗ R9) 2/2 ∗ R5 ∗ R9 ∗ R3 ∗ C1) ⋅ ΔR7)2 + ((R8/(R3 ∗ C1 ∗ R7 ∗ R9) 2/2 ∗ R5 ∗ R9 ∗ R7 ∗ R3) ⋅ ΔC1)2 + ((R8 ∗ −1/2/(R3 ∗ C1 ∗ R7 ∗ R9) 2 ∗ R3 ∗ C1 ∗ R7 ∗ R9) ⋅ ΔR5) + ((R8/(R3 ∗ C1 ∗ R7 ∗ R9) 2/2 ∗ R5 ∗ R9 ∗ R7 ∗ C1) ⋅ ΔR3)2 = 782.20687253 = 7.8220687253 × 10 2 = 8 × 10 2 ∂γ/2m ∂R9 ∂γ/2m ∂R8 ∂γ/2m ∂R7 ∂γ ∂γ/2m ∂R5 ∂γ/2m ∂R3 γ/2m = (−2.83 ± 0.08) × 10 4 γ 2m x(t) = A ⋅ e−γt/2m cos(ωt − ϕ) x(t) = 2.004 ⋅ e1090.942t cos(100664.1t − 2.210) (−2.83 ± 0.08) × 10 4 x′(t) = 2.004 ⋅ e1090.942+(−2.83±0.08)×104t cos(100664.1t − 2.210)In [216… data2 = pd . read_csv ( \"data3.csv\" ) t_vals2 = data2 . iloc [:, 0 ] . values y_vals2 = data2 . iloc [:, 1 ] . values t_vals2 = t_vals2 - 0.0146 plt . plot ( t_vals2 , y_vals2 ) def decay_function ( t ): return 2.004 * np . exp (( - 1090.942 - 28262 ) * t ) * np . cos ( 100664.1 * t - 3.5 ) + 1.1 plt . plot ( t_vals2 , decay_function ( t_vals2 )) plt . show () This looks really good! Seems like the theorized values and experimentally verrified values closely align. Sectio n 4 : No n ho mo gen o us b o un da ry b ea ts Ob jective: Using two function generators we want to observe beating behavior near the natural oscillation frequency of the analog computer . Eq uip men t: Everything from section 2 plus a second function generator Pro cedure : Begin by adding a second input to the adder circuit Connect the second function generator to this new input and set it to a sine waveform of approximately the natural harmonic frequency . Adjust the frequency until clear beating motion can be observed, and capture data. It is easiest to use the \"Run/Stop\" feature of the oscilliscope to clearly capture the beating patterns in the waveforms. A diagram of the experimental setup is in figure 9 below: Figure 9 D a ta : Resistor R_7-2 is measured to be 2.161 Function generator #1 is set to a 450hz square wave. Function generator #2 is set to a 17.83kHz sine wave As seen in the screenshot above, the frequency of the beats is approximately 3.5 kHz. A n a ly sis: The general solution to a beat problem is given by the following: The beat frequency should be the dif ference between the natural frequency of the harmonic oscillator and the frequency of the second function generator . Calculating the theoretical beat frequency: Natural Harmonic Frequency 15.6 kHz as measured on oscilloscope Function Generator is set to 17.83 kHz This isn't exactly the expected value, but given the uncertainty in measuring beat frequency due to the unclear edges in our oscilloscope reading, it is a reasonably close value. kΩ ± 0.9% Vo(t) = cos ωt + B sin ωt A ω 2 0 − ω2 ≈ 17.83 − 15.3 = 2.53kHz","libVersion":"0.5.0","langs":""}