{"path":"Notes/Physics/Quantum Physics/Persans/HW/HW5PaulLea.pdf","text":"PHYS2210 Homework Problem 26 Shooting Method Problem 2 - A) Edit the shooting method program below to ﬁnd the lowest three state energies for a particle in a symmetric box of width a=2.0 and depth V0=-10. Report your numerical answers in the units of this program in the next cell down from here. B) Describe how you could use this program to ﬁnd the states of an asymmetric well where , , and . (What are the conditions you might place on the eigenfunctions?) Give your answer in the next cell down from here. Note that the shooting method is discussed in Problem 4.15 in Townsend. Note that you can change the symmetry of the state you are seeking by commenting out one or the other of lines 9 or 10 in the function \"def acquire_well_state(a,V0, x, dx, Eguess)\". 𝑉 (𝑥 < 0) = ∞ 𝑉 (𝑥 > 𝑎/2) = 0 𝑉 (𝑖𝑛𝑠𝑖𝑑𝑒𝑏𝑜𝑥) = − )𝑉0 A. -9.1823 n =1 -6.911 n=2 -3.075 n=3 B. You could calculate the energy levels of one half of the well, guess the energy levels and plug those energy levels into a simulation of the other half of the well. The wavefunction would asymtopically approach inﬁnity at both sides, and be continuous and smooth without, including at the junction point between the two well depths The Time Independent Schrodinger equation is where . In one dimension, we can rearrange the equation to read We'll set , so that we must solve 𝐸Ψ = ( + 𝑉 (𝑥)) Ψ −ℏ2 2𝑚 ∇2 Ψ(𝑥, 𝑡) = 𝜓(𝑥)𝑒𝑥𝑝(𝑖𝐸/ℏ) (𝑥) = − [𝐸 − 𝑉 (𝑥)] 𝜓(𝑥)𝜓 ″ 2𝑚 ℏ2 𝑚 = ℏ = 1 (𝑥) = 2 [𝑉 (𝑥) − 𝐸] 𝜓(𝑥)𝜓 ″ PHYS2210Spring2024_HomeworkProblem26_Finite_well_Sh... http://localhost:8888/notebooks/Documents/School%20Vaul... 1 of 6 2/15/24, 18:36 This means that you must keep track of your energy units when converting in both Finite Diﬀerence Methods On a computer, we must work with discretized spatial grids. Since the potential is symmetric, the eigenstates will be either symmetric or anti-symmetric, so we only have to solve for \"half\" of the wavefunction, from to some large . We will solve for the wavefunction on a discrete grid with points, deﬁned by Furthermore, we need to use ﬁnite diﬀerencing to calculate derivatives numerically on a discrete grid. For example, the forward ﬁnite diﬀerence scheme for the ﬁrst derivative is While the backward diﬀerencing scheme is By using both the forward and backward diﬀerencing schemes, we can obtain what's called the second-order central diﬀerence approximation to the second derivative where . 𝑥 = 0 𝑥 = 𝐿 𝑁 = 𝑖 × 𝛿𝑥𝑥𝑖 𝛿𝑥 = 𝐿 𝑁 ( ) ≈𝜓 ′ 𝑥𝑖 𝜓( ) − 𝜓( )𝑥𝑖+1 𝑥𝑖 𝛿𝑥 ( ) ≈𝜓 ′ 𝑥𝑖 𝜓( ) − 𝜓( )𝑥𝑖 𝑥𝑖−1 𝛿𝑥 ≈ ( = =𝜓 ″ 𝑖 𝜓 ′ 𝑖 )′ ( ) −𝜓𝑖+1 𝜓𝑖 𝛿𝑥 ′ ( − ) − ( − )𝜓𝑖+1 𝜓𝑖 𝜓𝑖 𝜓𝑖−1 𝛿𝑥2 ≈𝜓 ″ 𝑖 − 2 +𝜓𝑖+1 𝜓𝑖 𝜓𝑖−1 𝛿𝑥2 = 𝜓( )𝜓𝑖 𝑥𝑖 Shooting Method Let's plug our our expression for the discrete second order derivative into the Schrodinger equation. After rearranging a bit, we get The solutions are either symmetric or anti-symmetric, so either or will be zero. Since We can start with either or , and then use the previous two formulas to construct the rest of the wavefunction. This is called the Shooting Method. Note: How do we know or ? Turns out, it doesn't matter! We just guess a value, and the only eﬀect the value has is on the normalization of the resulting wavefunction, which we can easily correct. = 2 − + 2𝛿 [𝑉 ( ) − 𝐸]𝜓𝑖+1 𝜓𝑖 𝜓𝑖−1 𝑥2 𝑥𝑖 𝜓𝑖 𝜓0 𝜓 ′ 0 ≈ + 𝛿𝑥𝜓1 𝜓0 𝜓 ′ 0 𝜓0 𝜓 ′ 0 𝜓0 𝜓 ′ 0 PHYS2210Spring2024_HomeworkProblem26_Finite_well_Sh... http://localhost:8888/notebooks/Documents/School%20Vaul... 2 of 6 2/15/24, 18:36 We know from Townsend Ch 4.1 that the ground state for a symmetric well is symmetric, with , while the ﬁrst excited state will be anti-symmetric, with . = 0𝜓 ′ 0 = 0𝜓0 Obtaining the Energy Wait, but what about the energy, ? We don't know that either, but it appears as a parameter in the Shooting Method. Furthermore, although we can solve the Schodinger equation for any , only very particular energies will yield physical, normalizable states. We'll ﬁnd the allowed energies using an ineﬃcient method that gives some insight. It's called \"guess and check\" (by me). If the energy is not that of an eigenstate, the wavefunction we ﬁnd by ﬁnite diﬀerence will blow up for large x. We seek an energy that is reasonably close to the non-blow-up point. With this method, we'll never get exactly the right energy, but we can be be so (arbitrarily) close to the right energy that the wavefunction near the well will be extremely close to the right one. First we need our basic packages 𝐸 𝐸 In [25]: Small functions to get the double well potential and normalize wavefunctions. 1. Potential takes an array of the grid points and returns an array of the same length with the values of the potential at each point, . • norm takes an array of values for the wavefunction and returns its norm, . • normalize will normalize the wavefunction so that . 𝑉 ( ) =𝑥𝑖 𝑉𝑖 𝜓( ) =𝑥𝑖 𝜓𝑖 ∫ 𝑑𝑥 ≈ 𝛿𝑥𝜓 2 ∑𝑖 𝜓 2 𝑖 𝛿𝑥 = 1∑𝑖 𝜓 2 𝑖 In [26]: This is the meat of the program. Starting with the value of the wavefunction and its derivative at , we use the shooting method to calculate the rest of the wavefunction iteratively, changing the energy until we ﬁnd an acceptable solution. 𝑥 = 0 %matplotlib inline import matplotlib import matplotlib.pyplot as plt import numpy import math def Potential(x, a, V0): V=numpy.zeros(len(x)) V[(abs(x)<=a/2.)] = -V0 return V PHYS2210Spring2024_HomeworkProblem26_Finite_well_Sh... http://localhost:8888/notebooks/Documents/School%20Vaul... 3 of 6 2/15/24, 18:36 In [27]: When we call the function below with the well parameters, we get the wavefunction back. In [119]: In the following cell you input the parameters for your calculation. For a ﬁnite square well you need the width of the well, ,the depth of the well, , and the step size, . You will also input a guess for the energy, Eguess, in the same units as . The input variable L allows you to set the range of your calculation and plot. 𝑎 𝑉0 𝑑𝑥 𝑉0 def forward_shooting(V, x, dx, f0, df0, Eguess): \"\"\" V - array with the values of the potential at the points in x x - the grid points dx - the spacing of the grid f0 - value of the function at x=0 df0 - value of the derivative of the function at x=0 Eguess is the energy you previously guessed. \"\"\" E = Eguess psi = numpy.zeros(len(x)) psi[0]=f0 for i, x_ in enumerate(x[0:-1]): if i==0: psi[i+1] = psi[i] + dx*df0 else: psi[i+1] = -psi[i-1] + 2.*( 1 + dx**2 * (V[i] - E) ) if(abs(psi[i+1]) > 100): print (\"big psi for\", i+1) return (psi, E) def acquire_well_state(a,V0, x, dx, Eguess): V = Potential(x, a, V0) #If you want a symmetric state the fourth and fifth parameters below should be 1 #If antisymmetric, change them to 0,1. #I chose V0 as the original amplitude (fourth parameter) in order to make the pl #of V and psi the same scale # ****************************************************************************** # (psi_0, Eguess) = forward_shooting(V, x, dx, V0, 0, Eguess) # USE THIS LINE IF (psi_0, Eguess) = forward_shooting(V, x, dx, 0, V0, Eguess) # ****************************************************************************** return (x, psi_0, Eguess) PHYS2210Spring2024_HomeworkProblem26_Finite_well_Sh... http://localhost:8888/notebooks/Documents/School%20Vaul... 4 of 6 2/15/24, 18:36 In [147]: big psi for 200 Guess energy= -6.911 # ********************************************************************************** a=2.0 V0=10 dx=0.05 Eguess=-6.911 #HERE IS WHERE YOU INPUT YOUR GUESS FOR THE ENERGY. # THE UNIT FOR ENERGY SHOULD BE THE SAME AS THE UNITS YOU USED FOR THE POTENTIAL ENE # ********************************************************************************** L=5*a L_plot=5 num= numpy.rint(L/dx+1) # number of points to calculate num=num.astype('int32') x=numpy.linspace(0,L,num,True) (x, Psi_0, energy_0) = acquire_well_state(a, V0, x, dx, Eguess) print ('Guess energy=', Eguess) plt.subplots() plt.plot(x, Potential(x, a, V0), label=\"V(x)\") plt.plot(x, Psi_0, 'r',label=\"$\\psi_0$\") plt.plot([0,L_plot], [energy_0,energy_0],'r--',label=\"$E_{guess}$\" plt.xlim([0,L_plot/2]) plt.ylim([-V0,V0]) plt.legend(loc=3) plt.title('Wavefunction for given energy') plt.xlabel('x') plt.show() PHYS2210Spring2024_HomeworkProblem26_Finite_well_Sh... http://localhost:8888/notebooks/Documents/School%20Vaul... 5 of 6 2/15/24, 18:36 References 1. Shooting Method for Double Well (https://nbviewer.jupyter.org /urls/www.numfys.net/media/notebooks /eigenenergies_double_well_potential.ipynb), Henning G. Hugdal, Magnus H-S Dahle and Peter Berg Note that the wavefunction you will get here is not normalized. In order to normalize, you need to integrate the probability density over a reasonable range and ﬁnd the factor that yields an integral of one. I will also supply you with a more sophisticated program written by Joe Paki (RPI alum 2012(?)) and based on the reference above. Joe's program seeks the best energy iteratively, removing the slow human in the middle. We will use his program next to explore the behavior of the states of a double well. In [ ]: PHYS2210Spring2024_HomeworkProblem26_Finite_well_Sh... http://localhost:8888/notebooks/Documents/School%20Vaul... 6 of 6 2/15/24, 18:36","libVersion":"0.5.0","langs":""}